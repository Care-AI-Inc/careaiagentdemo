version: '3.8'

services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    container_name: fastapi_service
    volumes:
      - .:/app
      - attachments:/app/attachments
      - cache:/app/.cache
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - LAMA_PARSE_API_KEY=${LAMA_PARSE_API_KEY}
      - OPEN_API_KEY=${OPEN_API_KEY}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - CONFIG_FILE=${CONFIG_FILE}
      - VAPI_AUTH_TOKEN=${VAPI_AUTH_TOKEN}
    command: uvicorn api_main:app --host 0.0.0.0 --port 8000

  background:
    build:
      context: .
      dockerfile: Dockerfile.background
    container_name: background_service
    volumes:
      - .:/app
      - attachments:/app/attachments
    command: python main.py
    environment:
      - LAMA_PARSE_API_KEY=${LAMA_PARSE_API_KEY}
      - OPEN_API_KEY=${OPEN_API_KEY}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - CONFIG_FILE=${CONFIG_FILE}

  db:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: careai
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
  roundcube:
    build:
      context: .
      dockerfile: Dockerfile.roundcube
    container_name: roundcube_service
    ports:
      - "9002:80"
    depends_on:
      - db
    environment:
      - ROUNDCUBE_DB_HOST=db
      - ROUNDCUBE_DB_USER=${DB_USER}
      - ROUNDCUBE_DB_PASSWORD=${DB_PASSWORD}
      - ROUNDCUBE_DB_NAME=roundcube
      - ROUNDCUBEMAIL_SKIN=elastic
      - ROUNDCUBEMAIL_DEFAULT_HOST=ssl://imap.gmail.com
      - ROUNDCUBEMAIL_DEFAULT_PORT=993
      - ROUNDCUBEMAIL_SMTP_SERVER=ssl://smtp.gmail.com
      - ROUNDCUBEMAIL_SMTP_PORT=465


volumes:
  postgres_data:
  attachments:
  cache:
